# -*- mode: org -*-
#+TITLE: project: starting a travel agency
#+SETUPFILE: ~/set-up-files/basic-setups.org
#+LANGUAGE: en
#+OPTIONS: timestamp:t
#+DESCRIPTION: Java back-end project for probing data and APIs from GDSs, Online Travel Agencies (OTAs), consolidators, etc.: (gradle, angular, spring)
#+KEYWORDS: YTA org-mode Emacs organization GTD getting-things-done git

* Tickets
** Phase 0. Generic tasks, recurring tasks, all tasks that are repetitive, short-term tasks that don't need tracking
[2024-08-20 Tue 20:26]
- YTA000 :: misc, small tasks, updates, etc. everything that don't need tracking (still need proper commit message)
  - subscribe to travel specialised mailing lists/news (few but trustworthy), etc., and review from there the component(s)/product(s) that need refactoring
** Phase 1 (0). MVP, architecture definition, first successful tests (unit, regression, non-reg)
- YTA001 :: 1A and business centred: testing the water of the business, do a basic successful CRUD requests (complete, all of them), but do not focus on specifics of the response
  + record cost and risk of a TA, for reporting and business presentations
  + paper work: (country specific) compliance and regulations on the sector
  + visit 1A API, be acquainted to its basic/main functional/technical flow
  + what are the basic available 1A APIs/entry points
  + competition ? : state of the art, compare results from competitors, and record all possible business added value compared to others
  + YTA basic build: very basic structure, architecture, test (automatic preferable)
  + run first CRUD requests successfully (in TEST environment)
  + at this step *no DB management is defined yet*, if need one, use light one for basic CRUD actions
- YTA001 :: YTA components centred, define basic architectures, and technical tools (ci-cd, dotfiles, etc)
  + define :
    - YTA components (and sub-components maybe): basic solid architecture tailored for modularity, maintenance, and monitoring
      + ADAP ::
        - RW ::
        - (really no FORM component yet this far)
      + (no OPTI yet this far, but since will)
  + tools ::
    - dotfiles
    - openAPI, openAPI state graphs ?
    - clean code compliance:
      + format (always standard, independently of platform: windows, mac, linux, etc.): clang format, editorconfig
      + indentation vs spaces
      + git hooks
      + static/dynamic program analysis tools
    - ansible
    - microservices: CNA (for cloud native applications)
      + podman a priori
    - ci-cd: workflows probing phase: to enhance further basic foundations and later refine architectures
      + github actions, gitlab ci, or jenkins ?
    - automated tests:
      + 
    - DB management: SQL/noSQL, if noSQL then prefer couchbase over mongo for example, in order to expand on CNA
      + couchbase XDCR ?
- YTA003 :: 1A API and functional centred, refine and strengthen built YTA architectures considering already acquired knowledge: functional and technical experiences, issues, design encumbrance, optimisation impediments, new investigation, and technical tools considerations (ci-cd, dotfiles, etc) , etc.
  + visit API contract
    - start documenting the product catalogue ([[*Products catalogue][Products catalogue]]) of YTA with first product ideas, just some basic to start with
  + ADAP ::
    - RW :: should only be completed with more requests
    - FORM :: unless really necessary due to some reason (genericity and modularity requirements, internal components requirements, etc.) do not diverge too much from 1A API data model, they know what they're doing
  + OPTI :: start the design of OPTI, now that have a better functional understanding to detect optimisation improvements, simple design, not yet use of optimisation algorithms
    - OPTI interface provided as an API (REST API or internal gRPC calls (remote procedure calls) ?)
    - C++ component
    - C++ state graphs
  + further technical refactoring:
    - 
- YTA004 :: YTA overall components (including OPTI) specialisation: provide 1A improved functional service to client, and platform stability; monitor (and alert) for KPIs, issues, etc.
  + put in place monitoring tools and their configurations
  + fine-tune workflow, and all tests according to feedback
  + identify improvements for platform stability (not just technical, but also functional: smooth refunds, luggage tracking, etc.), to be used in phase 2 (YTA0x0)
  + data collection: caching, kafka vs nats
  + data search and filtering
- YTA005 :: security oriented (build basic but solid security foundations)
  + API token, security, etc.
  + passwords management
** Phase 2 (00). maturity and strengthening phase: refactoring (studies mainly) based on feedback from phase 1 (technical, functional, and HR), secure components and product in general, etc
[2024-08-17 Sat 17:39]
- YTA010 :: growth centred, but exclusively on business and "HR" perspective, do studies based on experience, to determine further growth potential, and resources availability to execute and achieve those steps
  + employees availability
  + capital/budget/fund rising needed ?
  + market ? : how to attract customers, who are they, who are the premium customers, how to take care of them
- YTA020 :: further strengthen technical and security
  + refactoring of security
  + stress tests on passwords management
- YTA030 :: preparation for phase 3, studies, exclusively functional, continuity of YTA010, studies on how to strengthen the existing and make the platform sustainable over time
  + how to further take care of prime customers
  + how to attract more customers, based on the potential of available products and the identified needs of the clients found during phase 1 (YTA004)
  + main original customers are those travelling from/to Africa, but can extend that definition to "African" travellers in general
  + find new features based on advantages provided by ancillaries:
    - earning miles and points (loyalty),
    - travelling in group/with kids,
    - travel solutions for companies,
    - retailing,
    - subscriptions,
    - etc.
  + if volume of transactions justifies it, can't we use our position as business providers to demand some more other advantages ?
  + enrich further the [[*Products catalogue][Products catalogue]]
    - hotels, car rental, place to visits, etc.
- YTA040 :: still continuity of YTA010, exclusively technical studies, preparation for phase 3, after previous functional studies (YTA030) and having some functional prospects to enrich YTA product, these technical studies are aiming at finding technical improvements to optimise resources usage, savings on cost, and detect potential of investments
  + what resources, how should be allocated, to who, how much, etc.:
    - human:
      + hiring
      + training: functional, technical
      + teams:
        + dev
        + devops
        + maintenance team, after-sale
    - technical:
      + platform hosting (physical, virtual), 
    - financial: growth investment
    - logistic: material, office(s), etc
  + FinOps
  + OPTI:
    - identify ways of optimising further OPTI:
      + OPTI is supposed to be one optimisation component doing travel specific optimisation work, why not make an optimisation orchestrator that calls a set of optimisation tools from a more general optimisation framework (or sets of libraries) that provides various optimisation algorithms/solver
        - that way can even independently contribute to this framework with not travel related algorithms/tools that can be used somewhere else, for example the Travelling Salesman Problem solver (which might be travel related too, who knows)
          + checkout:
            - https://en.wikipedia.org/wiki/COIN-OR, https://www.coin-or.org/
            - https://en.wikipedia.org/wiki/List_of_optimization_software
            - https://en.wikipedia.org/wiki/OR-Tools
      + multi-objectives optimisation to find better offers,
      + global or local optimiser, both ?
      + use of static libraries ?
        - 
      + AI ?
      + etc.
    - always remember abstraction level of OPTI to allow for *genericity and re-usability* (by WBAPI for example)
** Phase 3 (000). maintenance, handovers, professionalisation and division of labour on every main speciality based on effort and knowledge
[2024-08-17 Sat 17:42]
- YTA100 ::
- YTA200 :: 
** Phase 4 (YTA-xxx): position is strongly sustained, look for further opportunities (definitely need for change on version release)
- YTA-000 :: extend to more opportunities: adapt product(s) to market outside of the one originally intended (Africa centred to more regions)
- YTA-001 :: extend the actual products provision
  + is it advantageous to expand the pool of providers ? (won't it threaten our position with 1A ?): sabre, travelport, others ?
    - check out the pros/cons of each: offers catalogue, retailing, travelling in group advantages
  + is it advantageous to expand the product on top of providers ? (won't it threaten our position with 1A ?) ?
    - for example, improving on travelport product of seat automatic allocation
    - google is enriching its position into the travel industry, can't it be worthwhile to plug into its service catalogue ?
  + is it advantageous to expand the type of clients ? (won't it threaten our position with 1A ?):
    - for example, can't we use our knowledge of the travel market to negociate products directly with airlines such as rwandair ?
  + is it advantageous to expand our type of services ? (won't it threaten our position with 1A ?):
    - for example, can't we use our knowledge or those of our contacts/clients to change our position ? not just as a consumer only, but also as products providers to our suppliers: add hotels, car rental, places to visit to 1A catalogue for example
    - to goal being to be the "middleman" between our local African clients (hotels, touristic places, ), and GDSs
* Studies findings
[2024-08-07 Wed 21:40]
** notes
- name ::
  + YTA ::
    - Your Travel agency
    - YTA's a Travel Agency (recursive name as for "GNU")
    - Yawe Travel Agency
** advantages of having a TA
[2024-07-06 Sat 01:54]
** advantages of using a TA (a "middle man", that can also be used as a selling marketing argument)
[2024-07-06 Sat 01:55]
- sources ::
  + https://www.quora.com/What-is-the-advantage-of-using-Amadeus-GDS-system-for-travel-agencies
- advantages (some) ::
  + range of travel content, ancillaries, and additional related content :: (accommodation, car rental, etc.)
  + real-time updates ::
  + efficiency, productivity, global reach :: TAs can streamline their workflow by using GDSs and save time on manual tasks such as globally checking multiple websites for availability and pricing
  + booking flexibility ::
    - TAs can customize travel itineraries based on their customers' preferences
    - TAs can easily make changes to bookings, issue tickets, and handle cancellations through the system.
  + reporting and analysis ::
    - *provide (sell and market) customers' product* and insight to airlines/GDSs
    - analysis tools for potential track of enhancement/improvement
      + => need for professional analysts
  + support and training ::

** Miscellaneous
- main GDS: Amadeus, Sabre, Travelport
* Features (MVP)
[2024-08-07 Wed 21:37]
* Data models
[2024-08-07 Wed 21:41]
** Products catalogue
* Components
[2024-08-07 Wed 21:46]
** ADAP
[2024-08-07 Wed 22:03]
- notes ::
  + ADAP for "Adaptor", a bridge to 1A API, the interface to amadeus public API
  + ADAP: a compound of components, one service that can be considered as a global group of microservices performing one business objective: providing an adapted API that links to 1A API
  + components in ADAP:
    - FORM :: a formatter/wrapper of data that are exchanged with 1A (data from/to *RW* really)
      + ==FORM== is wrapping 1A data to add more flexibility to be easily used internally by other YTA components (eg: OPTI)
      + it's also providing the format used outside of YTA (through YTAPI entry point)
      + FORM also interfaces 1A API resources with respect to some needs,eg:
        - process (wrap/filter/hide) some errors
        - restrict/hide some resources that should not yet appear in the product (for example, for confidentiality reasons deactivate a feature that is not ready yet, that is going through an asset development)
      + error management ::
        - FORM is in charge of wrapping 1A errors, or return YTA specific errors
    - RW :: for Reader-Writer, the actual direct link/interface/bridge to 1A
      + component pulls/pushes 1A formatted requests from/to ==FORM==
*** FORM
**** data models
**** error management
[2024-08-18 Sun 19:03]
*** RW
** OPTI
- OPTI for "Optimiser", a set of libraries (or framework?) to optimise and perform efficient search in data returned by ADAP
- OPTI: is provided as a micro-service, so still means an interface that wraps external input/output, calls, or requests for optimisation
  + [TODO] : interface provided as a REST API or internal gRPC calls (remote procedure calls) ?
- c++ component
** YTAPI (orchestrator, YTA entry point)
[2024-08-18 Sun 17:10]
- entry point of the overall platform, the orchestrator that receives and send all requests to/from YTA platform
* Architectures and workflows
[2024-08-07 Wed 21:41]
- 
* Prospects (potential improvements)
[2024-08-07 Wed 21:37]
