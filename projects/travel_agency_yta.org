# -*- mode: org -*-
#+TITLE: project: starting a travel agency
#+SETUPFILE: ~/set-up-files/basic-setups.org
#+LANGUAGE: en
#+OPTIONS: timestamp:t
#+DESCRIPTION: Java back-end project for probing data and APIs from GDSs, Online Travel Agencies (OTAs), consolidators, etc.: (gradle, angular, spring)
#+KEYWORDS: YTA org-mode Emacs organization GTD getting-things-done git

* Notes
- sources ::
  + 
** 
* Tickets
** Phase 1 (0). MVP, architecture definition, first successful tests (unit, regression, non-reg)
- YTA000 :: 1A and business centred: testing the water of the business, do a basic successful CRUD requests (complete, all of them), but do not focus on specifics of the response
  + record cost and risk of a TA, for reporting and business presentations
  + paper work: (country specific) compliance and regulations on the sector
  + visit 1A API, be acquainted to its basic/main functional/technical flow
  + what are the basic available 1A APIs/entry points
  + competition ? : state of the art, compare results from competitors, and record all possible business added value compared to others
  + YTA basic build: very basic structure, architecture, test (automatic preferable)
  + run first CRUD requests successfully (in TEST environment)
- YTA001 :: YTA components centred, define basic architectures, and technical tools (ci-cd, dotfiles, etc)
  + define :
    - YTA components (and sub-components maybe): basic solid architecture tailored for modularity, maintenance, and monitoring
  + tools ::
    - dotfiles
    - openAPI
    - ci-cd: workflows probing phase: to enhance further basic foundations and later refine architectures
      - github actions, gitlab ci, or jenkins ?
    - microservices:
      - podman a priori
    - automated tests:
      - 
- YTA002 :: 1A API and functional centred, refine and strengthen built YTA architectures considering already acquired knowledge: functional and technical experiences, issues, design encumbrance, optimisation impediments, new investigation, and technical tools considerations (ci-cd, dotfiles, etc) , etc.
  + visit API contract
  + start the design of OPTI, now that have a better functional understanding to detect optimisation improvements
    - OPTI interface provided as a REST API or internal gRPC calls (remote procedure calls) ?
  + further technical refactoring:
    - 
- YTA003 :: YTA overall components (including OPTI) specialisation: provide 1A improved functional service to client, and platform stability; monitor (and alert) for KPIs, issues, etc.
  + put in place monitoring tools and their configurations
  + fine-tune workflow, and all tests according to feedback
  + identify improvements for platform stability (not just technical, but also functional: smooth refunds, luggage tracking, etc.), to be used in phase 2 (YTA0x0)
** Phase 2 (00). maturity and strengthening phase: refactoring based on feedback from phase 1, secure components, 
[2024-08-17 Sat 17:39]
- YTA010 :: growth centred, just first studies based on feedback, to determine growth potential, resources availability to execute further steps, etc.
  + employees availability
  + capital/budget/fund rising needed ?
  + market ? : how to attract customers, who are they, who are the premium customers, how to take care of them
- YTA020 :: security centred
  + API token, security, etc.
- YTA030 :: build-up on YTA010,
  + how to further take care of solid customers
  + how to attract more customers, based on the potential of available products, and the identified needs of the clients found during phase 1 (YTA003)
** Phase 3: maintenance, handovers, professionalisation, and division of labour on each main speciality
[2024-08-17 Sat 17:42]
- 
* Studies findings
[2024-08-07 Wed 21:40]
** notes
- name ::
  + YTA ::
    - Your Travel agency
    - YTA's a Travel Agency (recursive name as for "GNU")
    - Yawe Travel Agency
** advantages of having a TA
[2024-07-06 Sat 01:54]
** advantages of using a TA (a "middle man", that can also be used as a selling marketing argument)
[2024-07-06 Sat 01:55]
- sources ::
  + https://www.quora.com/What-is-the-advantage-of-using-Amadeus-GDS-system-for-travel-agencies
- advantages (some) ::
  + range of travel content, ancillaries, and additional related content :: (accommodation, car rental, etc.)
  + real-time updates ::
  + efficiency, productivity, global reach :: TAs can streamline their workflow by using GDSs and save time on manual tasks such as globally checking multiple websites for availability and pricing
  + booking flexibility ::
    - TAs can customize travel itineraries based on their customers' preferences
    - TAs can easily make changes to bookings, issue tickets, and handle cancellations through the system.
  + reporting and analysis ::
    - *provide (sell and market) customers' product* and insight to airlines/GDSs
    - analysis tools for potential track of enhancement/improvement
      + => need for professional analysts
  + support and training :: 
* Features (MVP)
[2024-08-07 Wed 21:37]
* Data models
[2024-08-07 Wed 21:41]
* Components
[2024-08-07 Wed 21:46]
** ADAP
[2024-08-07 Wed 22:03]
- notes ::
  + ADAP for "Adaptor", a bridge to 1A API, the interface to amadeus public API
  + ADAP: a compound of components, one service that can be considered as a global group of microservices performing one business objective: providing an adapted API that links to 1A API
  + components in ADAP:
    - FORM :: a formatter/wrapper of data that's exchanged with 1A: requests that are being written/read to/from 1A)
    - RW :: for Reader-Writer, the actual linker/interface/bridge to 1A. The component pulls/pushes 1A formatted requests from/to ==FORM==
*** FORM
*** RW
** OPTI
- OPTI for "Optimiser", a set of libraries (or framework?) to optimise and perform efficient search in data returned by ADAP
- OPTI: is provided as a micro-service, so still means an interface that wraps external input/output, calls, or requests for optimisation
  + [TODO] : interface provided as a REST API or internal gRPC calls (remote procedure calls) ?
- 
* Architectures and workflows
[2024-08-07 Wed 21:41]
- 
* Prospects (potential improvements)
[2024-08-07 Wed 21:37]
